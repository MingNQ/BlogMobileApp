name: Android CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    name: Run lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json
    
    - name: Run lint
      run: ./gradlew lintDebug
    
    - name: Upload HTML test report
      uses: actions/upload-artifact@v4
      with:
        name: index.html
        path: app/build/reports/lint-results-debug.html
     
  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json

    - name: Run tests
      run: ./gradlew test

    - name: Upload HTML test report
      uses: actions/upload-artifact@v4
      with:
        name: unit_test_report
        path: app/build/reports/tests/testDebugUnitTest/
    
  static-code-analysis:
    needs: [unit-test]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
          java-version: 17
          distribution: 'temurin'

    - name: Decode google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
    - name: Build and analyze
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./gradlew build sonar --info

  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
          java-version: 17
          distribution: 'temurin'

    - name: Decode google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json

    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
          name: blog-mobile-app.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  deploy:
    needs: [package]
    name: Deploy to Firebase
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json

    - name: Download APK
      uses: actions/download-artifact@v4
      with:
          name: blog-mobile-app.apk
          path: app/build/outputs/apk/debug/

    - name: Upload Artifact to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        groups: testers
        file: app/build/outputs/apk/debug/app-debug.apk
        releaseNotes: ${{ inputs.release_notes }}